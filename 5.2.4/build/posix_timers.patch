Index: zebra/processor.c
===================================================================
--- zebra/processor.c	(revision 51)
+++ zebra/processor.c	(working copy)
@@ -22,8 +22,10 @@
  *------------------------------------------------------------------------*/
 
 #include "processor.h"
+#include <unistd.h>
 #include <signal.h>
 #include <time.h>
+#include <sys/time.h>   /* gettimeofday */
 #include <assert.h>
 #include <errno.h>
 
@@ -191,8 +193,14 @@
                                      int timeout)
 {
     if(timeout >= 0) {
-        /* FIXME config for this, maybe fallback to gettimeofday? */
+#if _POSIX_TIMERS > 0
         clock_gettime(CLOCK_REALTIME, abstime);
+#else
+        struct timeval ustime;
+        gettimeofday(&ustime, NULL);
+        abstime->tv_nsec = ustime.tv_usec * 1000;
+        abstime->tv_sec = ustime.tv_sec;
+#endif
         abstime->tv_nsec += (timeout % 1000) * 1000000;
         abstime->tv_sec += (timeout / 1000) + (abstime->tv_nsec / 1000000000);
         abstime->tv_nsec %= 1000000000;
@@ -252,7 +260,14 @@
         int reltime = timeout;
         if(reltime >= 0) {
             struct timespec now;
+#if _POSIX_TIMERS > 0
             clock_gettime(CLOCK_REALTIME, &now);
+#else
+            struct timeval ustime;
+            gettimeofday(&ustime, NULL);
+            now.tv_nsec = ustime.tv_usec * 1000;
+            now.tv_sec = ustime.tv_sec;
+#endif
             reltime = ((abstime->tv_sec - now.tv_sec) * 1000 +
                        (abstime->tv_nsec - now.tv_nsec) / 1000000);
             if(reltime <= 0)
Index: zebra/img_scanner.c
===================================================================
--- zebra/img_scanner.c	(revision 51)
+++ zebra/img_scanner.c	(working copy)
@@ -22,11 +22,13 @@
  *------------------------------------------------------------------------*/
 
 #include <config.h>
+#include <unistd.h>
 #ifdef HAVE_INTTYPES_H
 # include <inttypes.h>
 #endif
 #include <stdlib.h>     /* malloc, free */
 #include <time.h>       /* clock_gettime */
+#include <sys/time.h>   /* gettimeofday */
 #include <string.h>     /* strlen, strcmp, memset, memcpy */
 #include <assert.h>
 
@@ -180,10 +182,16 @@
 
     sym = alloc_sym(iscn, type, data);
 
-    /* FIXME config for this, maybe fallback to gettimeofday? */
+    /* timestamp symbol */
+#if _POSIX_TIMERS > 0
     struct timespec abstime;
     clock_gettime(CLOCK_REALTIME, &abstime);
     sym->time = (abstime.tv_sec * 1000) + ((abstime.tv_nsec / 500000) + 1) / 2;
+#else
+    struct timeval abstime;
+    gettimeofday(&abstime, NULL);
+    sym->time = (abstime.tv_sec * 1000) + ((abstime.tv_usec / 500) + 1) / 2;
+#endif
 
     /* initialize first point */
     sym->npts = 0;
